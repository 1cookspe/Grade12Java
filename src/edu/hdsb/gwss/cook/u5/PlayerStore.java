/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hdsb.gwss.cook.u5;

import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author 1cookspe
 */
public class PlayerStore extends javax.swing.JFrame {

    PlayerRecord newPlayer;
    RandomAccessFile recordFile;
    boolean changingRecord = false;
    private final static boolean DELETED = true;
    private final static boolean NOT_DELETED = false;

    /**
     * Creates new form PlayerStore
     */
    public PlayerStore() throws FileNotFoundException {
        initComponents();
        recordFile = new RandomAccessFile("player_rankings.dat", "rw");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameField = new javax.swing.JTextField();
        countryField = new javax.swing.JTextField();
        rankingField = new javax.swing.JTextField();
        addPlayer = new javax.swing.JButton();
        changeButton = new javax.swing.JButton();
        recordNumberField = new javax.swing.JTextField();
        showRecordButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        recordArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        recordShowField = new javax.swing.JTextField();
        eraseRecordsButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        recordToDelete = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameField.setFont(new java.awt.Font("Swis721 BT", 0, 11)); // NOI18N
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        countryField.setFont(new java.awt.Font("Swis721 BT", 0, 11)); // NOI18N

        rankingField.setFont(new java.awt.Font("Swis721 BT", 0, 11)); // NOI18N

        addPlayer.setFont(new java.awt.Font("Swis721 Blk BT", 0, 11)); // NOI18N
        addPlayer.setText("ADD");
        addPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlayerActionPerformed(evt);
            }
        });

        changeButton.setFont(new java.awt.Font("Swis721 Blk BT", 0, 11)); // NOI18N
        changeButton.setText("CHANGE");
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });

        recordNumberField.setFont(new java.awt.Font("Swis721 BT", 0, 11)); // NOI18N

        showRecordButton.setFont(new java.awt.Font("Swis721 Blk BT", 0, 11)); // NOI18N
        showRecordButton.setText("SHOW RECORD");
        showRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showRecordButtonActionPerformed(evt);
            }
        });

        recordArea.setColumns(20);
        recordArea.setRows(5);
        jScrollPane1.setViewportView(recordArea);

        jLabel1.setFont(new java.awt.Font("Swis721 BT", 0, 11)); // NOI18N
        jLabel1.setText("Record #:");

        eraseRecordsButton.setText("ERASE RECORDS!");
        eraseRecordsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraseRecordsButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Name:");

        jLabel3.setText("Country:");

        jLabel4.setText("Ranking:");

        jLabel5.setText("Record #:");

        exitButton.setText("EXIT");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Record #:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(countryField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rankingField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPlayer))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(eraseRecordsButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(recordToDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(changeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(recordNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(recordShowField))
                            .addComponent(showRecordButton))
                        .addGap(39, 39, 39))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(countryField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rankingField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPlayer)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(changeButton)
                            .addComponent(recordNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(showRecordButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(recordShowField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eraseRecordsButton)
                            .addComponent(recordToDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(20, 20, 20))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void addPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlayerActionPerformed
        try {
            if (!nameField.getText().equals("") && !nameField.getText().equals(null) && !countryField.getText().equals("") && !countryField.getText().equals(null) && !rankingField.getText().equals("") && !rankingField.getText().equals(null)) {
                try {
                    newPlayer = new PlayerRecord((nameField.getText()), countryField.getText(), Integer.parseInt(rankingField.getText()));
                    int location = (int) recordFile.length();
                    recordFile.seek(location);
                    recordFile.writeBoolean(NOT_DELETED);
                    recordFile.writeChars(newPlayer.getPlayerName());
                    recordFile.writeChars(newPlayer.getCountryName());
                    recordFile.writeInt(newPlayer.getRanking());
                } catch (IOException ex) {
                    Logger.getLogger(PlayerStore.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please input valid data to all fields.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please input a valid number in the \"Ranking\" field.");
        }
    }//GEN-LAST:event_addPlayerActionPerformed

    private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
        String country = "";
        String name = "";
        int ranking = 0;
        PlayerRecord changePlayer = null;

        try {
            if (!nameField.getText().equals("") && !nameField.getText().equals(null) && !countryField.getText().equals("") && !countryField.getText().equals(null) && !rankingField.getText().equals(null) && !rankingField.getText().equals("")) {
                name = nameField.getText();
                country = countryField.getText();
                ranking = Integer.parseInt(rankingField.getText());
                changePlayer = new PlayerRecord(name, country, ranking);
            } else {
                JOptionPane.showMessageDialog(null, "Please input valid information.");
            }

            if (changePlayer != null) {
                if (!recordNumberField.getText().equals(null) && !recordNumberField.getText().equals("")) {
                    int recordNumber = Integer.parseInt(recordNumberField.getText());
                    int position = PlayerRecord.RECORD_SIZE * (recordNumber - 1);
                    try {
                        //newPlayer = new PlayerRecord((nameField.getText()), countryField.getText(), Integer.parseInt(rankingField.getText()));
                        recordFile.seek(position);
                        recordFile.writeBoolean(NOT_DELETED);
                        recordFile.writeChars(changePlayer.getPlayerName());
                        recordFile.writeChars(changePlayer.getCountryName());
                        recordFile.writeInt(changePlayer.getRanking());
                    } catch (IOException ex) {
                        Logger.getLogger(PlayerStore.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Input a record number to be changed.");
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please input a valid number in the \"Ranking\" and \"Record Number\" fields.");
        }
//        nameField.setText("");
//        countryField.setText("");

    }//GEN-LAST:event_changeButtonActionPerformed

    private void showRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showRecordButtonActionPerformed
        try {
            System.out.println("LENGTH: " + recordFile.length());
        } catch (IOException ex) {
            Logger.getLogger(PlayerStore.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            if (recordShowField.getText() != "" && Integer.parseInt(recordShowField.getText()) > 0) {
                try {
                    PlayerRecord playerRecord = new PlayerRecord("", "", 0);
                    int recordNumber = Integer.parseInt(recordShowField.getText());
                    long numRecords = recordFile.length() / playerRecord.RECORD_SIZE;
                    System.out.println("There are " + numRecords + " records currently in the file.");
                    int position = playerRecord.RECORD_SIZE * (recordNumber - 1);
                    if (position < recordFile.length()) {
                        System.out.println("POSITION: " + position);
                        System.out.println("FILE LENGTH: " + recordFile.length());
                        recordFile.seek(position);

                        boolean deleted = recordFile.readBoolean();

                        if (!deleted) {
                            char[] playerName = new char[playerRecord.PLAYER_LENGTH];
                            for (int i = 0; i < playerRecord.PLAYER_LENGTH; i++) {
                                playerName[i] = recordFile.readChar();
                            }
                            playerRecord.setPlayerName(new String(playerName));

                            char[] countryName = new char[playerRecord.COUNTRY_LENGTH];
                            for (int i = 0; i < playerRecord.COUNTRY_LENGTH; i++) {
                                countryName[i] = recordFile.readChar();
                            }
                            playerRecord.setCountryName(new String(countryName));

                            playerRecord.setRanking(recordFile.readInt());

                            System.out.println(playerRecord.toString());
//                            boolean trueOrFalse = recordFile.readBoolean();
//                            System.out.println("TRUE OR FALSE: " + trueOrFalse);
                            if (playerRecord.getRanking() != 0) {
                                recordArea.setText(playerRecord.getPlayerName() + "\n" + playerRecord.getCountryName() + "\n" + playerRecord.getRanking());
                            } else {
                                JOptionPane.showMessageDialog(null, "Record #" + recordNumber + " does not exist.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Record #" + recordNumber + " has been deleted. Please input a different record.");
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Record #" + recordNumber + " does not exist. Please input a different record.");
                    }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Could not read!");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please input a record number to be read.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please input a valid number to access the record.");
        }
    }//GEN-LAST:event_showRecordButtonActionPerformed

    private void eraseRecordsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eraseRecordsButtonActionPerformed
        PlayerRecord playerRecord = new PlayerRecord("", "", 0);
        try {
            if (Integer.parseInt(recordToDelete.getText()) != 0) {
                int recordNumber = Integer.parseInt(recordToDelete.getText());
                long numRecords = 0;
                try {
                    numRecords = recordFile.length() / playerRecord.RECORD_SIZE;
                    int position = playerRecord.RECORD_SIZE * (recordNumber - 1);
                    if (position < recordFile.length()) {
                        recordFile.seek(position);
                        recordFile.writeBoolean(DELETED);
                    } else {
                        JOptionPane.showMessageDialog(null, "Record #" + recordNumber + " does not exist. Please input a different record.");
                    }
                } catch (IOException ex) {
                    Logger.getLogger(PlayerStore.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please input a valid record number.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please input a valid record number.");
        }

    }//GEN-LAST:event_eraseRecordsButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        try {
            recordFile.close();
        } catch (IOException ex) {
            Logger.getLogger(PlayerStore.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerStore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PlayerStore().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(PlayerStore.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPlayer;
    private javax.swing.JButton changeButton;
    private javax.swing.JTextField countryField;
    private javax.swing.JButton eraseRecordsButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField rankingField;
    private javax.swing.JTextArea recordArea;
    private javax.swing.JTextField recordNumberField;
    private javax.swing.JTextField recordShowField;
    private javax.swing.JTextField recordToDelete;
    private javax.swing.JButton showRecordButton;
    // End of variables declaration//GEN-END:variables
}
